package com.npdevs.healthbit.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class SignUp extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50600080546001600160a01b03191633178155600181905560028190556003819055600455614e7e806100446000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806390d976e2116100de578063b7bcaea811610097578063c2c379e911610071578063c2c379e9146117f4578063cc3d967b14611811578063d93c98b414611aad578063fbd25f6314611d655761018e565b8063b7bcaea8146115d8578063bab90dbd146115fe578063be68ad24146117ce5761018e565b806390d976e214610efe5780639294a45a14610f1b578063a32da9d114610f38578063a4a1e26314610f55578063b2e7ad9d14610f5d578063b4a5fa40146115345761018e565b80634157ea121161014b578063643774521161012557806364377452146108565780636ba13a821461087c5780637098e40d146108845780638e2e46b014610b3c5761018e565b80634157ea121461075c57806342383fe4146108005780635500ce29146108395761018e565b806304bb9bc0146101935780630558d3e9146101ad5780630a6e4403146102485780630bccdd42146103f857806313853f66146105a657806314cf2f0814610754575b600080fd5b61019b611d6d565b60408051918252519081900360200190f35b6101d3600480360360208110156101c357600080fd5b50356001600160a01b0316611d73565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020d5781810151838201526020016101f5565b50505050905090810190601f16801561023a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103f66004803603606081101561025e57600080fd5b810190602081018135600160201b81111561027857600080fd5b82018360208201111561028a57600080fd5b803590602001918460018302840111600160201b831117156102ab57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156102fd57600080fd5b82018360208201111561030f57600080fd5b803590602001918460018302840111600160201b8311171561033057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561038257600080fd5b82018360208201111561039457600080fd5b803590602001918460018302840111600160201b831117156103b557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611e1e945050505050565b005b6103f66004803603606081101561040e57600080fd5b810190602081018135600160201b81111561042857600080fd5b82018360208201111561043a57600080fd5b803590602001918460018302840111600160201b8311171561045b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156104ad57600080fd5b8201836020820111156104bf57600080fd5b803590602001918460018302840111600160201b831117156104e057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561053257600080fd5b82018360208201111561054457600080fd5b803590602001918460018302840111600160201b8311171561056557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061202d945050505050565b6103f6600480360360608110156105bc57600080fd5b810190602081018135600160201b8111156105d657600080fd5b8201836020820111156105e857600080fd5b803590602001918460018302840111600160201b8311171561060957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561065b57600080fd5b82018360208201111561066d57600080fd5b803590602001918460018302840111600160201b8311171561068e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156106e057600080fd5b8201836020820111156106f257600080fd5b803590602001918460018302840111600160201b8311171561071357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061246d945050505050565b61019b612675565b6103f66004803603602081101561077257600080fd5b810190602081018135600160201b81111561078c57600080fd5b82018360208201111561079e57600080fd5b803590602001918460018302840111600160201b831117156107bf57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061267b945050505050565b61081d6004803603602081101561081657600080fd5b50356127e8565b604080516001600160a01b039092168252519081900360200190f35b61081d6004803603602081101561084f57600080fd5b5035612803565b6101d36004803603602081101561086c57600080fd5b50356001600160a01b031661281e565b61019b612895565b6103f6600480360360a081101561089a57600080fd5b810190602081018135600160201b8111156108b457600080fd5b8201836020820111156108c657600080fd5b803590602001918460018302840111600160201b831117156108e757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561093957600080fd5b82018360208201111561094b57600080fd5b803590602001918460018302840111600160201b8311171561096c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156109be57600080fd5b8201836020820111156109d057600080fd5b803590602001918460018302840111600160201b831117156109f157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610a4357600080fd5b820183602082011115610a5557600080fd5b803590602001918460018302840111600160201b83111715610a7657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610ac857600080fd5b820183602082011115610ada57600080fd5b803590602001918460018302840111600160201b83111715610afb57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061289b945050505050565b6103f6600480360360e0811015610b5257600080fd5b810190602081018135600160201b811115610b6c57600080fd5b820183602082011115610b7e57600080fd5b803590602001918460018302840111600160201b83111715610b9f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610bf157600080fd5b820183602082011115610c0357600080fd5b803590602001918460018302840111600160201b83111715610c2457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610c7657600080fd5b820183602082011115610c8857600080fd5b803590602001918460018302840111600160201b83111715610ca957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610cfb57600080fd5b820183602082011115610d0d57600080fd5b803590602001918460018302840111600160201b83111715610d2e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610d8057600080fd5b820183602082011115610d9257600080fd5b803590602001918460018302840111600160201b83111715610db357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610e0557600080fd5b820183602082011115610e1757600080fd5b803590602001918460018302840111600160201b83111715610e3857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610e8a57600080fd5b820183602082011115610e9c57600080fd5b803590602001918460018302840111600160201b83111715610ebd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612e55945050505050565b61081d60048036036020811015610f1457600080fd5b5035613320565b61081d60048036036020811015610f3157600080fd5b503561333b565b61081d60048036036020811015610f4e57600080fd5b5035613356565b61019b613371565b6103f66004803603610160811015610f7457600080fd5b810190602081018135600160201b811115610f8e57600080fd5b820183602082011115610fa057600080fd5b803590602001918460018302840111600160201b83111715610fc157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561101357600080fd5b82018360208201111561102557600080fd5b803590602001918460018302840111600160201b8311171561104657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561109857600080fd5b8201836020820111156110aa57600080fd5b803590602001918460018302840111600160201b831117156110cb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561111d57600080fd5b82018360208201111561112f57600080fd5b803590602001918460018302840111600160201b8311171561115057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156111a257600080fd5b8201836020820111156111b457600080fd5b803590602001918460018302840111600160201b831117156111d557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561122757600080fd5b82018360208201111561123957600080fd5b803590602001918460018302840111600160201b8311171561125a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156112ac57600080fd5b8201836020820111156112be57600080fd5b803590602001918460018302840111600160201b831117156112df57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561133157600080fd5b82018360208201111561134357600080fd5b803590602001918460018302840111600160201b8311171561136457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156113b657600080fd5b8201836020820111156113c857600080fd5b803590602001918460018302840111600160201b831117156113e957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561143b57600080fd5b82018360208201111561144d57600080fd5b803590602001918460018302840111600160201b8311171561146e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156114c057600080fd5b8201836020820111156114d257600080fd5b803590602001918460018302840111600160201b831117156114f357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613378945050505050565b6103f66004803603602081101561154a57600080fd5b810190602081018135600160201b81111561156457600080fd5b82018360208201111561157657600080fd5b803590602001918460018302840111600160201b8311171561159757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613d8b945050505050565b6101d3600480360360208110156115ee57600080fd5b50356001600160a01b0316613f17565b6116246004803603602081101561161457600080fd5b50356001600160a01b0316613f8b565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019080838360005b8381101561166d578181015183820152602001611655565b50505050905090810190601f16801561169a5780820380516001836020036101000a031916815260200191505b5085810384528851815288516020918201918a019080838360005b838110156116cd5781810151838201526020016116b5565b50505050905090810190601f1680156116fa5780820380516001836020036101000a031916815260200191505b50858103835287518152875160209182019189019080838360005b8381101561172d578181015183820152602001611715565b50505050905090810190601f16801561175a5780820380516001836020036101000a031916815260200191505b50858103825286518152865160209182019188019080838360005b8381101561178d578181015183820152602001611775565b50505050905090810190601f1680156117ba5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b611624600480360360208110156117e457600080fd5b50356001600160a01b03166141ff565b6101d36004803603602081101561180a57600080fd5b5035614288565b6118376004803603602081101561182757600080fd5b50356001600160a01b0316614309565b6040518080602001806020018060200180602001806020018060200187810387528d818151815260200191508051906020019080838360005b83811015611888578181015183820152602001611870565b50505050905090810190601f1680156118b55780820380516001836020036101000a031916815260200191505b5087810386528c5181528c516020918201918e019080838360005b838110156118e85781810151838201526020016118d0565b50505050905090810190601f1680156119155780820380516001836020036101000a031916815260200191505b5087810385528b5181528b516020918201918d019080838360005b83811015611948578181015183820152602001611930565b50505050905090810190601f1680156119755780820380516001836020036101000a031916815260200191505b5087810384528a5181528a516020918201918c019080838360005b838110156119a8578181015183820152602001611990565b50505050905090810190601f1680156119d55780820380516001836020036101000a031916815260200191505b5087810383528951815289516020918201918b019080838360005b83811015611a085781810151838201526020016119f0565b50505050905090810190601f168015611a355780820380516001836020036101000a031916815260200191505b5087810382528851815288516020918201918a019080838360005b83811015611a68578181015183820152602001611a50565b50505050905090810190601f168015611a955780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b6103f6600480360360a0811015611ac357600080fd5b810190602081018135600160201b811115611add57600080fd5b820183602082011115611aef57600080fd5b803590602001918460018302840111600160201b83111715611b1057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611b6257600080fd5b820183602082011115611b7457600080fd5b803590602001918460018302840111600160201b83111715611b9557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611be757600080fd5b820183602082011115611bf957600080fd5b803590602001918460018302840111600160201b83111715611c1a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611c6c57600080fd5b820183602082011115611c7e57600080fd5b803590602001918460018302840111600160201b83111715611c9f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611cf157600080fd5b820183602082011115611d0357600080fd5b803590602001918460018302840111600160201b83111715611d2457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506146b4945050505050565b61019b614c54565b60015481565b6001600160a01b0381166000908152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015611e125780601f10611de757610100808354040283529160200191611e12565b820191906000526020600020905b815481529060010190602001808311611df557829003601f168201915b50505050509050919050565b6040518351600080516020614de58339815191529185916020918201918291908401908083835b60208310611e645780518252601f199092019160209182019101611e45565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014611ecc57336000908152600b602090815260409091208451611eca92600190920191860190614c5a565b505b6040518251600080516020614de58339815191529184916020918201918291908401908083835b60208310611f125780518252601f199092019160209182019101611ef3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014611f7a57336000908152600b602090815260409091208351611f7892600390920191850190614c5a565b505b6040518151600080516020614de58339815191529183916020918201918291908401908083835b60208310611fc05780518252601f199092019160209182019101611fa1565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461202857336000908152600b60209081526040909120825161202692600490920191840190614c5a565b505b505050565b612035614cd8565b336000908152600e60209081526040918290208251815460026001821615610100026000190190911604601f8101849004909302810160a0908101909452608081018381529093919284928491908401828280156120d45780601f106120a9576101008083540402835291602001916120d4565b820191906000526020600020905b8154815290600101906020018083116120b757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121765780601f1061214b57610100808354040283529160200191612176565b820191906000526020600020905b81548152906001019060200180831161215957829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156122085780601f106121dd57610100808354040283529160200191612208565b820191906000526020600020905b8154815290600101906020018083116121eb57829003601f168201915b5050509183525050600391909101546001600160a01b03908116602090920191909152606082015191925016156122705760405162461bcd60e51b8152600401808060200182810382526024815260200180614e056024913960400191505060405180910390fd5b6011826040518082805190602001908083835b602083106122a25780518252601f199092019160209182019101612283565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff1615915061231190505760405162461bcd60e51b8152600401808060200182810382526021815260200180614e296021913960400191505060405180910390fd5b60408051608081018252858152602080820186905281830185905233606083018190526000908152600e82529290922081518051929391926123569284920190614c5a565b50602082810151805161236f9260018501920190614c5a565b506040820151805161238b916002840191602090910190614c5a565b5060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060016011836040518082805190602001908083835b602083106123f05780518252601f1990920191602091820191016123d1565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520805460ff1916961515969096179095558385018552600a8452693932b9b2b0b931b432b960b11b848201908152336000908152601390925294902092516124669492509050614c5a565b5050505050565b6040518351600080516020614de58339815191529185916020918201918291908401908083835b602083106124b35780518252601f199092019160209182019101612494565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461251b57336000908152600960209081526040909120845161251992600390920191860190614c5a565b505b6040518251600080516020614de58339815191529184916020918201918291908401908083835b602083106125615780518252601f199092019160209182019101612542565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120146125c95733600090815260096020908152604090912083516125c792600490920191850190614c5a565b505b6040518151600080516020614de58339815191529183916020918201918291908401908083835b6020831061260f5780518252601f1990920191602091820191016125f0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461202857336000908152600960209081526040909120825161202692600190920191840190614c5a565b60045481565b612683614d09565b336000908152600d60209081526040918290208251815460026001821615610100026000190190911604601f81018490049093028101606090810185529381018381529093919284928491908401828280156127205780601f106126f557610100808354040283529160200191612720565b820191906000526020600020905b81548152906001019060200180831161270357829003601f168201915b5050509183525050600191909101546001600160a01b039081166020928301529082015191925016156127845760405162461bcd60e51b8152600401808060200182810382526024815260200180614e056024913960400191505060405180910390fd5b6040805180820182528381523360208083018290526000918252600d815292902081518051929391926127ba9284920190614c5a565b5060209190910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050565b6005602052600090815260409020546001600160a01b031681565b6008602052600090815260409020546001600160a01b031681565b6001600160a01b0381166000908152600a602090815260409182902060030180548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015611e125780601f10611de757610100808354040283529160200191611e12565b60035481565b6128a3614d21565b336000908152600b60209081526040918290208251815460026001821615610100026000190190911604601f8101849004909302810160e090810190945260c081018381529093919284928491908401828280156129425780601f1061291757610100808354040283529160200191612942565b820191906000526020600020905b81548152906001019060200180831161292557829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129e45780601f106129b9576101008083540402835291602001916129e4565b820191906000526020600020905b8154815290600101906020018083116129c757829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015612a765780601f10612a4b57610100808354040283529160200191612a76565b820191906000526020600020905b815481529060010190602001808311612a5957829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015612b0a5780601f10612adf57610100808354040283529160200191612b0a565b820191906000526020600020905b815481529060010190602001808311612aed57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015612b9e5780601f10612b7357610100808354040283529160200191612b9e565b820191906000526020600020905b815481529060010190602001808311612b8157829003601f168201915b5050509183525050600591909101546001600160a01b0390811660209092019190915260a08201519192501615612c13576040805162461bcd60e51b81526020600482015260146024820152731859191c995cdcc8185b1c9958591e481d5cd95960621b604482015290519081900360640190fd5b6012836040518082805190602001908083835b60208310612c455780518252601f199092019160209182019101612c26565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150612cc09050576040805162461bcd60e51b81526020600482015260136024820152721858591a185c88185b1c9958591e481d5cd959606a1b604482015290519081900360640190fd5b6040805160c081018252878152602080820185905281830186905260608201889052608082018790523360a083018190526000908152600b8252929092208151805192939192612d139284920190614c5a565b506020828101518051612d2c9260018501920190614c5a565b5060408201518051612d48916002840191602090910190614c5a565b5060608201518051612d64916003840191602090910190614c5a565b5060808201518051612d80916004840191602090910190614c5a565b5060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060016012846040518082805190602001908083835b60208310612de55780518252601f199092019160209182019101612dc6565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420805460ff1916951515959095179094555050600480546000908152600890935291208054336001600160a01b031990911617905580546001019055505050505050565b6040518751600080516020614de58339815191529189916020918201918291908401908083835b60208310612e9b5780518252601f199092019160209182019101612e7c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014612f0357336000908152600a602090815260409091208851612f01926007909201918a0190614c5a565b505b6040518651600080516020614de58339815191529188916020918201918291908401908083835b60208310612f495780518252601f199092019160209182019101612f2a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014612fb157336000908152600a602090815260409091208751612faf92600690920191890190614c5a565b505b6040518551600080516020614de58339815191529187916020918201918291908401908083835b60208310612ff75780518252601f199092019160209182019101612fd8565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461305f57336000908152600a60209081526040909120865161305d92600590920191880190614c5a565b505b6040518451600080516020614de58339815191529186916020918201918291908401908083835b602083106130a55780518252601f199092019160209182019101613086565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461310d57336000908152600a60209081526040909120855161310b92600290920191870190614c5a565b505b6040518351600080516020614de58339815191529185916020918201918291908401908083835b602083106131535780518252601f199092019160209182019101613134565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120146131bb57336000908152600a6020908152604090912084516131b992600490920191860190614c5a565b505b6040518251600080516020614de58339815191529184916020918201918291908401908083835b602083106132015780518252601f1990920191602091820191016131e2565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461326957336000908152600a60209081526040909120835161326792600890920191850190614c5a565b505b6040518151600080516020614de58339815191529183916020918201918291908401908083835b602083106132af5780518252601f199092019160209182019101613290565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201461331757336000908152600a60209081526040909120825161331592600390920191840190614c5a565b505b50505050505050565b6000908152600760205260409020546001600160a01b031690565b6006602052600090815260409020546001600160a01b031681565b6007602052600090815260409020546001600160a01b031681565b6003545b90565b613380614d60565b336000908152600a60209081526040918290208251815460026001821615610100026000190190911604601f810184900490930281016101a090810190945261018081018381529093919284928491908401828280156134215780601f106133f657610100808354040283529160200191613421565b820191906000526020600020905b81548152906001019060200180831161340457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134c35780601f10613498576101008083540402835291602001916134c3565b820191906000526020600020905b8154815290600101906020018083116134a657829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156135555780601f1061352a57610100808354040283529160200191613555565b820191906000526020600020905b81548152906001019060200180831161353857829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156135e95780601f106135be576101008083540402835291602001916135e9565b820191906000526020600020905b8154815290600101906020018083116135cc57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815293820193929183018282801561367d5780601f106136525761010080835404028352916020019161367d565b820191906000526020600020905b81548152906001019060200180831161366057829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156137115780601f106136e657610100808354040283529160200191613711565b820191906000526020600020905b8154815290600101906020018083116136f457829003601f168201915b505050918352505060068201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156137a55780601f1061377a576101008083540402835291602001916137a5565b820191906000526020600020905b81548152906001019060200180831161378857829003601f168201915b505050918352505060078201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156138395780601f1061380e57610100808354040283529160200191613839565b820191906000526020600020905b81548152906001019060200180831161381c57829003601f168201915b505050918352505060088201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156138cd5780601f106138a2576101008083540402835291602001916138cd565b820191906000526020600020905b8154815290600101906020018083116138b057829003601f168201915b505050918352505060098201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156139615780601f1061393657610100808354040283529160200191613961565b820191906000526020600020905b81548152906001019060200180831161394457829003601f168201915b5050509183525050600a8201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156139f55780601f106139ca576101008083540402835291602001916139f5565b820191906000526020600020905b8154815290600101906020018083116139d857829003601f168201915b5050509183525050600b91909101546001600160a01b039081166020909201919091526101608201519192501615613a5e5760405162461bcd60e51b8152600401808060200182810382526024815260200180614e056024913960400191505060405180910390fd5b600f846040518082805190602001908083835b60208310613a905780518252601f199092019160209182019101613a71565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150613b159050576040805162461bcd60e51b815260206004820152601e60248201527f41616468616172206e756d62657220616c72656164792070726573656e740000604482015290519081900360640190fd5b60408051610180810182528d815260208082018e90528183018d905260608201859052608082018c905260a082018b905260c082018a905260e082018990526101008201889052610120820187905261014082018690523361016083018190526000908152600a8252929092208151805192939192613b979284920190614c5a565b506020828101518051613bb09260018501920190614c5a565b5060408201518051613bcc916002840191602090910190614c5a565b5060608201518051613be8916003840191602090910190614c5a565b5060808201518051613c04916004840191602090910190614c5a565b5060a08201518051613c20916005840191602090910190614c5a565b5060c08201518051613c3c916006840191602090910190614c5a565b5060e08201518051613c58916007840191602090910190614c5a565b506101008201518051613c75916008840191602090910190614c5a565b506101208201518051613c92916009840191602090910190614c5a565b506101408201518051613caf91600a840191602090910190614c5a565b5061016082015181600b0160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050506001600f856040518082805190602001908083835b60208310613d155780518252601f199092019160209182019101613cf6565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420805460ff1916951515959095179094555050600380546000908152600790935291208054336001600160a01b031990911617905580546001019055505050505050505050505050565b613d93614d09565b336000908152600c60209081526040918290208251815460026001821615610100026000190190911604601f8101849004909302810160609081018552938101838152909391928492849190840182828015613e305780601f10613e0557610100808354040283529160200191613e30565b820191906000526020600020905b815481529060010190602001808311613e1357829003601f168201915b5050509183525050600191909101546001600160a01b03908116602092830152908201519192501615613e945760405162461bcd60e51b8152600401808060200182810382526024815260200180614e056024913960400191505060405180910390fd5b6040805180820182528381523360208083018290526000918252600c81529290208151805192939192613eca9284920190614c5a565b50602091820151600191820180546001600160a01b039092166001600160a01b03199283161790556002805460009081526006909452604090932080549091163317905581540190555050565b6001600160a01b03811660009081526013602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015611e125780601f10611de757610100808354040283529160200191611e12565b6001600160a01b038116600090815260096020908152604091829020805483516002600180841615610100026000190190931604601f81018590048502820185019095528481526060948594859485949093908401926003850192600486019291869183018282801561403f5780601f106140145761010080835404028352916020019161403f565b820191906000526020600020905b81548152906001019060200180831161402257829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959950889450925084019050828280156140cd5780601f106140a2576101008083540402835291602001916140cd565b820191906000526020600020905b8154815290600101906020018083116140b057829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529598508794509250840190508282801561415b5780601f106141305761010080835404028352916020019161415b565b820191906000526020600020905b81548152906001019060200180831161413e57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156141e95780601f106141be576101008083540402835291602001916141e9565b820191906000526020600020905b8154815290600101906020018083116141cc57829003601f168201915b5050505050905093509350935093509193509193565b6001600160a01b0381166000908152600b6020908152604091829020805483516002600180841615610100026000190190931604601f81018590048502820185019095528481526060948594859485949093908401926003850192600486019291869183018282801561403f5780601f106140145761010080835404028352916020019161403f565b6000818152600760209081526040808320546001600160a01b03168352600a8083529281902090920180548351601f6002600019600185161561010002019093169290920491820184900484028101840190945280845260609392830182828015611e125780601f10611de757610100808354040283529160200191611e12565b6001600160a01b0381166000908152600a60209081526040918290206002808201805485516001821615610100026000190190911692909204601f810185900485028301850190955284825260609485948594859485948594909360058401936006810193600482019360078301936008909301928891908301828280156143d25780601f106143a7576101008083540402835291602001916143d2565b820191906000526020600020905b8154815290600101906020018083116143b557829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959b508a9450925084019050828280156144605780601f1061443557610100808354040283529160200191614460565b820191906000526020600020905b81548152906001019060200180831161444357829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959a50899450925084019050828280156144ee5780601f106144c3576101008083540402835291602001916144ee565b820191906000526020600020905b8154815290600101906020018083116144d157829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529599508894509250840190508282801561457c5780601f106145515761010080835404028352916020019161457c565b820191906000526020600020905b81548152906001019060200180831161455f57829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529598508794509250840190508282801561460a5780601f106145df5761010080835404028352916020019161460a565b820191906000526020600020905b8154815290600101906020018083116145ed57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156146985780601f1061466d57610100808354040283529160200191614698565b820191906000526020600020905b81548152906001019060200180831161467b57829003601f168201915b5050505050905095509550955095509550955091939550919395565b6146bc614d21565b336000908152600960209081526040918290208251815460026001821615610100026000190190911604601f8101849004909302810160e090810190945260c0810183815290939192849284919084018282801561475b5780601f106147305761010080835404028352916020019161475b565b820191906000526020600020905b81548152906001019060200180831161473e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156147fd5780601f106147d2576101008083540402835291602001916147fd565b820191906000526020600020905b8154815290600101906020018083116147e057829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f8101839004830285018301909152808452938101939083018282801561488f5780601f106148645761010080835404028352916020019161488f565b820191906000526020600020905b81548152906001019060200180831161487257829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156149235780601f106148f857610100808354040283529160200191614923565b820191906000526020600020905b81548152906001019060200180831161490657829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156149b75780601f1061498c576101008083540402835291602001916149b7565b820191906000526020600020905b81548152906001019060200180831161499a57829003601f168201915b5050509183525050600591909101546001600160a01b0390811660209092019190915260a08201519192501615614a1f5760405162461bcd60e51b8152600401808060200182810382526024815260200180614e056024913960400191505060405180910390fd5b6010836040518082805190602001908083835b60208310614a515780518252601f199092019160209182019101614a32565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150614ac090505760405162461bcd60e51b8152600401808060200182810382526021815260200180614e296021913960400191505060405180910390fd5b6040805160c081018252878152602080820185905281830186905260608201889052608082018790523360a08301819052600090815260098252929092208151805192939192614b139284920190614c5a565b506020828101518051614b2c9260018501920190614c5a565b5060408201518051614b48916002840191602090910190614c5a565b5060608201518051614b64916003840191602090910190614c5a565b5060808201518051614b80916004840191602090910190614c5a565b5060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505060016010846040518082805190602001908083835b60208310614be55780518252601f199092019160209182019101614bc6565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420805460ff1916951515959095179094555050600180546000908152600590935291208054336001600160a01b0319909116179055805481019055505050505050565b60025481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614c9b57805160ff1916838001178555614cc8565b82800160010185558215614cc8579182015b82811115614cc8578251825591602001919060010190614cad565b50614cd4929150614dca565b5090565b604051806080016040528060608152602001606081526020016060815260200160006001600160a01b031681525090565b60408051808201909152606081526000602082015290565b6040518060c00160405280606081526020016060815260200160608152602001606081526020016060815260200160006001600160a01b031681525090565b604051806101800160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160006001600160a01b031681525090565b61337591905b80821115614cd45760008155600101614dd056fec5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4704164647265737320616c7265616479207573656420746f206d616b65206163636f756e7441616468616172204e756d62657220616c72656164792072656769737465726564a265627a7a72315820ae6cd9a833f1a91b977d68e1c8c0302acef2011e662c3e384485d86bb44db9e264736f6c634300050c0032";

    public static final String FUNC_COMPANIES_LIST = "companies_list";

    public static final String FUNC_DOCTORSCOUNT = "doctorsCount";

    public static final String FUNC_DOCTORS_LIST = "doctors_list";

    public static final String FUNC_EDITDOCTORDETAILS = "editDoctorDetails";

    public static final String FUNC_EDITPHARMACYDETAILS = "editPharmacyDetails";

    public static final String FUNC_EDITUSERDETAILS = "editUserDetails";

    public static final String FUNC_GETAUTHORIZEDETAILS = "getAuthorizeDetails";

    public static final String FUNC_GETCOMPANYDETAILS = "getCompanyDetails";

    public static final String FUNC_GETDOCTORDETAILS = "getDoctorDetails";

    public static final String FUNC_GETPHARMACYDETAILS = "getPharmacyDetails";

    public static final String FUNC_GETUSERADDRESS = "getUserAddress";

    public static final String FUNC_GETUSERBLOODGROUP = "getUserBloodGroup";

    public static final String FUNC_GETUSERDETAILS = "getUserDetails";

    public static final String FUNC_GETUSERHASH = "getUserHash";

    public static final String FUNC_GETUSERSCOUNT = "getUsersCount";

    public static final String FUNC_INSURANCE_COMPANIES_COUNT = "insurance_companies_count";

    public static final String FUNC_PHARMACYCOUNT = "pharmacyCount";

    public static final String FUNC_PHARMACY_LIST = "pharmacy_list";

    public static final String FUNC_SIGNUPBLOODBANK = "signupBloodBank";

    public static final String FUNC_SIGNUPCOMPANY = "signupCompany";

    public static final String FUNC_SIGNUPDOCTOR = "signupDoctor";

    public static final String FUNC_SIGNUPPHARMACY = "signupPharmacy";

    public static final String FUNC_SIGNUPRESEARCHER = "signupResearcher";

    public static final String FUNC_SIGNUPUSER = "signupUser";

    public static final String FUNC_USERSCOUNT = "usersCount";

    public static final String FUNC_USERS_LIST = "users_list";

    @Deprecated
    protected SignUp(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SignUp(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SignUp(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SignUp(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<SignUp> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SignUp.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<SignUp> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SignUp.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SignUp> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SignUp.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SignUp> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SignUp.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public RemoteCall<String> companies_list(BigInteger param0) {
        final Function function = new Function(FUNC_COMPANIES_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> doctorsCount() {
        final Function function = new Function(FUNC_DOCTORSCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> doctors_list(BigInteger param0) {
        final Function function = new Function(FUNC_DOCTORS_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> editDoctorDetails(String _openTime, String _closeTime, String _hospital) {
        final Function function = new Function(
                FUNC_EDITDOCTORDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime), 
                new org.web3j.abi.datatypes.Utf8String(_hospital)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> editPharmacyDetails(String _pharmacy, String _openTime, String _closeTime) {
        final Function function = new Function(
                FUNC_EDITPHARMACYDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_pharmacy), 
                new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> editUserDetails(String _locality, String _district, String _state, String _country, String _city, String _houseNum, String _hash) {
        final Function function = new Function(
                FUNC_EDITUSERDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_locality), 
                new org.web3j.abi.datatypes.Utf8String(_district), 
                new org.web3j.abi.datatypes.Utf8String(_state), 
                new org.web3j.abi.datatypes.Utf8String(_country), 
                new org.web3j.abi.datatypes.Utf8String(_city), 
                new org.web3j.abi.datatypes.Utf8String(_houseNum), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getAuthorizeDetails(String id) {
        final Function function = new Function(FUNC_GETAUTHORIZEDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCompanyDetails(String id) {
        final Function function = new Function(FUNC_GETCOMPANYDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple4<String, String, String, String>> getDoctorDetails(String id) {
        final Function function = new Function(FUNC_GETDOCTORDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple4<String, String, String, String>>(
                new Callable<Tuple4<String, String, String, String>>() {
                    @Override
                    public Tuple4<String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<Tuple4<String, String, String, String>> getPharmacyDetails(String id) {
        final Function function = new Function(FUNC_GETPHARMACYDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple4<String, String, String, String>>(
                new Callable<Tuple4<String, String, String, String>>() {
                    @Override
                    public Tuple4<String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<String> getUserAddress(BigInteger itr) {
        final Function function = new Function(FUNC_GETUSERADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(itr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getUserBloodGroup(BigInteger itr) {
        final Function function = new Function(FUNC_GETUSERBLOODGROUP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(itr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple6<String, String, String, String, String, String>> getUserDetails(String id) {
        final Function function = new Function(FUNC_GETUSERDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple6<String, String, String, String, String, String>>(
                new Callable<Tuple6<String, String, String, String, String, String>>() {
                    @Override
                    public Tuple6<String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, String, String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<String> getUserHash(String id) {
        final Function function = new Function(FUNC_GETUSERHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getUsersCount() {
        final Function function = new Function(FUNC_GETUSERSCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> insurance_companies_count() {
        final Function function = new Function(FUNC_INSURANCE_COMPANIES_COUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> pharmacyCount() {
        final Function function = new Function(FUNC_PHARMACYCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> pharmacy_list(BigInteger param0) {
        final Function function = new Function(FUNC_PHARMACY_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> signupBloodBank(String _name) {
        final Function function = new Function(
                FUNC_SIGNUPBLOODBANK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupCompany(String _name) {
        final Function function = new Function(
                FUNC_SIGNUPCOMPANY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupDoctor(String _name, String _openTime, String _closeTime, String _aadhar, String _hospital) {
        final Function function = new Function(
                FUNC_SIGNUPDOCTOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar), 
                new org.web3j.abi.datatypes.Utf8String(_hospital)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupPharmacy(String _name, String _openTime, String _closeTime, String _aadhar, String _pharmacy) {
        final Function function = new Function(
                FUNC_SIGNUPPHARMACY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar), 
                new org.web3j.abi.datatypes.Utf8String(_pharmacy)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupResearcher(String _name, String _researchCenter, String _aadhar) {
        final Function function = new Function(
                FUNC_SIGNUPRESEARCHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_researchCenter), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupUser(String _name, String _dob, String _country, String _city, String _state, String _district, String _locality, String _houseNum, String _aadhar, String _bloodGroup, String _hash) {
        final Function function = new Function(
                FUNC_SIGNUPUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_dob), 
                new org.web3j.abi.datatypes.Utf8String(_country), 
                new org.web3j.abi.datatypes.Utf8String(_city), 
                new org.web3j.abi.datatypes.Utf8String(_state), 
                new org.web3j.abi.datatypes.Utf8String(_district), 
                new org.web3j.abi.datatypes.Utf8String(_locality), 
                new org.web3j.abi.datatypes.Utf8String(_houseNum), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar), 
                new org.web3j.abi.datatypes.Utf8String(_bloodGroup), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> usersCount() {
        final Function function = new Function(FUNC_USERSCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> users_list(BigInteger param0) {
        final Function function = new Function(FUNC_USERS_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static SignUp load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SignUp(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SignUp load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SignUp(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SignUp load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new SignUp(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SignUp load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new SignUp(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
