package com.npdevs.healthbit.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class SignUp extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_AUTHORIZE = "authorize";

    public static final String FUNC_AUTHORIZE_LIST = "authorize_list";

    public static final String FUNC_AUTHORIZE_LIST_COUNT = "authorize_list_count";

    public static final String FUNC_COMPANIES_LIST = "companies_list";

    public static final String FUNC_DOCTORSCOUNT = "doctorsCount";

    public static final String FUNC_DOCTORS_LIST = "doctors_list";

    public static final String FUNC_EDITDOCTORDETAILS = "editDoctorDetails";

    public static final String FUNC_EDITPHARMACYDETAILS = "editPharmacyDetails";

    public static final String FUNC_EDITUSERDETAILS = "editUserDetails";

    public static final String FUNC_GETAUTHORIZEDETAILS = "getAuthorizeDetails";

    public static final String FUNC_GETCOMPANYDETAILS = "getCompanyDetails";

    public static final String FUNC_GETDOCTORDETAILS = "getDoctorDetails";

    public static final String FUNC_GETPHARMACYDETAILS = "getPharmacyDetails";

    public static final String FUNC_GETUSERADDRESS = "getUserAddress";

    public static final String FUNC_GETUSERBLOODGROUP = "getUserBloodGroup";

    public static final String FUNC_GETUSERDETAILS = "getUserDetails";

    public static final String FUNC_GETUSERHASH = "getUserHash";

    public static final String FUNC_GETUSERSCOUNT = "getUsersCount";

    public static final String FUNC_INSURANCE_COMPANIES_COUNT = "insurance_companies_count";

    public static final String FUNC_ISAUTHORIZED = "isAuthorized";

    public static final String FUNC_PHARMACYCOUNT = "pharmacyCount";

    public static final String FUNC_PHARMACY_LIST = "pharmacy_list";

    public static final String FUNC_REJECT = "reject";

    public static final String FUNC_SIGNUPBLOODBANK = "signupBloodBank";

    public static final String FUNC_SIGNUPCOMPANY = "signupCompany";

    public static final String FUNC_SIGNUPDOCTOR = "signupDoctor";

    public static final String FUNC_SIGNUPPHARMACY = "signupPharmacy";

    public static final String FUNC_SIGNUPRESEARCHER = "signupResearcher";

    public static final String FUNC_SIGNUPUSER = "signupUser";

    public static final String FUNC_USERSCOUNT = "usersCount";

    public static final String FUNC_USERS_LIST = "users_list";

    @Deprecated
    protected SignUp(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SignUp(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SignUp(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SignUp(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<SignUp> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SignUp.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<SignUp> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SignUp.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SignUp> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SignUp.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SignUp> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SignUp.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public RemoteCall<TransactionReceipt> authorize(String person, String name) {
        final Function function = new Function(
                FUNC_AUTHORIZE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(person), 
                new org.web3j.abi.datatypes.Utf8String(name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> authorize_list(BigInteger param0) {
        final Function function = new Function(FUNC_AUTHORIZE_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> authorize_list_count() {
        final Function function = new Function(FUNC_AUTHORIZE_LIST_COUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> companies_list(BigInteger param0) {
        final Function function = new Function(FUNC_COMPANIES_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> doctorsCount() {
        final Function function = new Function(FUNC_DOCTORSCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> doctors_list(BigInteger param0) {
        final Function function = new Function(FUNC_DOCTORS_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> editDoctorDetails(String _openTime, String _closeTime, String _hospital) {
        final Function function = new Function(
                FUNC_EDITDOCTORDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime), 
                new org.web3j.abi.datatypes.Utf8String(_hospital)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> editPharmacyDetails(String _pharmacy, String _openTime, String _closeTime) {
        final Function function = new Function(
                FUNC_EDITPHARMACYDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_pharmacy), 
                new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> editUserDetails(String _locality, String _district, String _state, String _country, String _city, String _houseNum, String _hash) {
        final Function function = new Function(
                FUNC_EDITUSERDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_locality), 
                new org.web3j.abi.datatypes.Utf8String(_district), 
                new org.web3j.abi.datatypes.Utf8String(_state), 
                new org.web3j.abi.datatypes.Utf8String(_country), 
                new org.web3j.abi.datatypes.Utf8String(_city), 
                new org.web3j.abi.datatypes.Utf8String(_houseNum), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getAuthorizeDetails(String id) {
        final Function function = new Function(FUNC_GETAUTHORIZEDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCompanyDetails(String id) {
        final Function function = new Function(FUNC_GETCOMPANYDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple4<String, String, String, String>> getDoctorDetails(String id) {
        final Function function = new Function(FUNC_GETDOCTORDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple4<String, String, String, String>>(
                new Callable<Tuple4<String, String, String, String>>() {
                    @Override
                    public Tuple4<String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<Tuple4<String, String, String, String>> getPharmacyDetails(String id) {
        final Function function = new Function(FUNC_GETPHARMACYDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple4<String, String, String, String>>(
                new Callable<Tuple4<String, String, String, String>>() {
                    @Override
                    public Tuple4<String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<String> getUserAddress(BigInteger itr) {
        final Function function = new Function(FUNC_GETUSERADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(itr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getUserBloodGroup(BigInteger itr) {
        final Function function = new Function(FUNC_GETUSERBLOODGROUP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(itr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple4<String, String, String, String>> getUserDetails(String id) {
        final Function function = new Function(FUNC_GETUSERDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple4<String, String, String, String>>(
                new Callable<Tuple4<String, String, String, String>>() {
                    @Override
                    public Tuple4<String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<String> getUserHash(String id) {
        final Function function = new Function(FUNC_GETUSERHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getUsersCount() {
        final Function function = new Function(FUNC_GETUSERSCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> insurance_companies_count() {
        final Function function = new Function(FUNC_INSURANCE_COMPANIES_COUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> isAuthorized(String person, String name) {
        final Function function = new Function(FUNC_ISAUTHORIZED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(person), 
                new org.web3j.abi.datatypes.Utf8String(name)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> pharmacyCount() {
        final Function function = new Function(FUNC_PHARMACYCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> pharmacy_list(BigInteger param0) {
        final Function function = new Function(FUNC_PHARMACY_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> reject(String person, String name) {
        final Function function = new Function(
                FUNC_REJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(person), 
                new org.web3j.abi.datatypes.Utf8String(name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupBloodBank(String _name) {
        final Function function = new Function(
                FUNC_SIGNUPBLOODBANK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupCompany(String _name) {
        final Function function = new Function(
                FUNC_SIGNUPCOMPANY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupDoctor(String _name, String _openTime, String _closeTime, String _aadhar, String _hospital) {
        final Function function = new Function(
                FUNC_SIGNUPDOCTOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar), 
                new org.web3j.abi.datatypes.Utf8String(_hospital)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupPharmacy(String _name, String _openTime, String _closeTime, String _aadhar, String _pharmacy) {
        final Function function = new Function(
                FUNC_SIGNUPPHARMACY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_openTime), 
                new org.web3j.abi.datatypes.Utf8String(_closeTime), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar), 
                new org.web3j.abi.datatypes.Utf8String(_pharmacy)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupResearcher(String _name, String _researchCenter, String _aadhar) {
        final Function function = new Function(
                FUNC_SIGNUPRESEARCHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_researchCenter), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signupUser(String _name, String _dob, String _country, String _city, String _state, String _district, String _locality, String _houseNum, String _aadhar, String _bloodGroup, String _hash) {
        final Function function = new Function(
                FUNC_SIGNUPUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_dob), 
                new org.web3j.abi.datatypes.Utf8String(_country), 
                new org.web3j.abi.datatypes.Utf8String(_city), 
                new org.web3j.abi.datatypes.Utf8String(_state), 
                new org.web3j.abi.datatypes.Utf8String(_district), 
                new org.web3j.abi.datatypes.Utf8String(_locality), 
                new org.web3j.abi.datatypes.Utf8String(_houseNum), 
                new org.web3j.abi.datatypes.Utf8String(_aadhar), 
                new org.web3j.abi.datatypes.Utf8String(_bloodGroup), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> usersCount() {
        final Function function = new Function(FUNC_USERSCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> users_list(BigInteger param0) {
        final Function function = new Function(FUNC_USERS_LIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static SignUp load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SignUp(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SignUp load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SignUp(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SignUp load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new SignUp(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SignUp load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new SignUp(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
